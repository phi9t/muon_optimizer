name: Dependency Management

on:
  schedule:
    # Run weekly on Mondays at 06:00 UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.repository_owner != 'dependabot[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Update dependencies with uv
      run: |
        # Update lock file
        uv lock --upgrade
        
        # Check if there are changes
        if git diff --quiet uv.lock; then
          echo "No dependency updates available"
          exit 0
        fi
        
        # Install updated dependencies
        uv sync --dev
    
    - name: Run tests with updated dependencies
      run: |
        uv run pytest muon_optimizer_test.py -x -v
        uv run pytest example_usage_test.py::TestTableFunctions -v
    
    - name: Check for security vulnerabilities
      run: |
        uv run pip install safety
        uv run safety check --json || echo "Safety check completed"
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'ðŸ”„ Update dependencies'
        body: |
          ## Dependency Updates
          
          This PR updates the project dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `uv.lock` with latest dependency versions
          - All tests pass with updated dependencies
          - Security check completed
          
          ### Testing
          - âœ… Core tests: `muon_optimizer_test.py`
          - âœ… Example tests: `example_usage_test.py`
          - âœ… Security scan completed
          
          ### Auto-generated
          This PR was automatically created by the dependency update workflow.
          Please review the changes and merge if appropriate.
        branch: chore/update-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated
          chore

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
        pip install torch>=2.7.1 --index-url https://download.pytorch.org/whl/cpu
        pip install -e .[dev]
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Run bandit security scan
      run: |
        bandit -r muon_optimizer.py example_usage.py -f json -o bandit-report.json || true
        bandit -r muon_optimizer.py example_usage.py
    
    - name: Run semgrep security scan
      run: |
        semgrep --config=auto muon_optimizer.py example_usage.py --json --output=semgrep-report.json || true
        semgrep --config=auto muon_optimizer.py example_usage.py
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json
    
    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = 'ðŸš¨ Security vulnerabilities detected';
          const body = `
          ## Security Scan Results
          
          The automated security scan has detected potential vulnerabilities in the codebase.
          
          ### Reports Generated
          - Safety: Dependency vulnerability scan
          - Bandit: Python code security scan  
          - Semgrep: Code pattern security scan
          
          ### Action Required
          Please review the security reports in the workflow artifacts and address any critical issues.
          
          **Workflow:** ${{ github.workflow }}
          **Run:** ${{ github.run_id }}
          **Commit:** ${{ github.sha }}
          `;
          
          // Check if issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'security,automated',
            state: 'open'
          });
          
          if (issues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'automated', 'high-priority']
            });
          }